version: '3'

services:
  nginx:
    image: healthcatalyst/fabric.docker.nginx
    environment:
      - HOST=identity
      - REMOTEPORT=5001
    ports:
      - "80:80"
      - "443:443"
    networks:
      - webnet

  identity:
    image: healthcatalyst/fabric.identity
    environment:
      - HostingOptions__UseInMemoryStores=false
      - CouchDbSettings__Server=http://haproxy:5984/
      - CouchDbSettings__Username=${COUCHDB_USER}
      - CouchDbSettings__Password=${COUCHDB_PASSWORD}
    deploy:
      replicas: 2
    command: ["./wait-for-couchdb.sh", "http://haproxy:5984", "dotnet", "Fabric.Identity.API.dll"]
    networks:
      - webnet
      - dbnet

  couchdb1:
    image: healthcatalyst/fabric.docker.couchdb
    volumes:
      - db1-data:/opt/couchdb/data
    environment:
      - NODENAME=couchdb1
      - COUCHDB_USER
      - COUCHDB_PASSWORD
    ports:
      - "15984:5984"
    networks:
      - dbnet

  setup:
    image: healthcatalyst/fabric.docker.couchdb
    environment:
      - COUCHDB_USER
      - COUCHDB_PASSWORD
    command: bash -c "/opt/couchdb/wait-for-it.sh couchdb1:5984 -t 300 -- ./configure-cluster.sh"
    depends_on:
      - couchdb1
    networks:
      - dbnet

  couchdb2:
    image: healthcatalyst/fabric.docker.couchdb
    volumes:
      - db2-data:/opt/couchdb/data
    environment:
      - NODENAME=couchdb2
      - COUCHDB_USER
      - COUCHDB_PASSWORD
    ports:
      - "25984:5984"
    networks:
      - dbnet

  couchdb3:
    image: healthcatalyst/fabric.docker.couchdb
    volumes:
      - db3-data:/opt/couchdb/data
    environment:
      - NODENAME=couchdb3
      - COUCHDB_USER
      - COUCHDB_PASSWORD
    ports:
      - "35984:5984"
    networks:
      - dbnet

  haproxy:
    image: healthcatalyst/fabric.docker.haproxy
    ports:
      - "5984:5984"
    networks:
      - dbnet

networks:
  webnet:
  dbnet:

volumes:
  db1-data:
  db2-data:
  db3-data:
