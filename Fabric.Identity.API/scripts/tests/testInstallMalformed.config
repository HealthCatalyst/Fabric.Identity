<?xml version="1.0" encoding="utf-8"?>
<installation>
  <settings>
    <scope name="common">
      <!-- The encrypted Fabric.Installer client secret, used for registering additional API's
           and Clients with Fabric.Identity. After Fabric.Identity is installed, the secret will 
           be written to this setting -->
      <variable name="fabricInstallerSecret" value="" />
      <!-- The thumb-print of an SSL certificate to use for encrypting/decrypting sensitive information 
           in the config. For initial installation it is recommended to use the thumbprint of the 
           certificate providing TLS/SSL for the website.-->
      <variable name="encryptionCertificateThumbprint" value="" />
      <!-- The address of the Sql Server Instance -->
      <variable name="sqlServerAddress" value="localhost" />
      <!-- The name of the Metadata database on the sql server instance -->
      <variable name="metadataDbName" value="EDWAdmin" />
      <variable name="identityService" value="" />
      <variable name="discoveryService" value="" />
      <variable name="authorizationService" value="" />
      <!-- The Fully Qualified Domain Name for the web server to install the web applications on -->
      <variable name="webServerDomain" value="" />
      <!-- The name of the environment that this installation represents -->
      <variable name="clientEnvironment" value="Dev" />
      <!-- The unique client name for this environment -->
      <variable name="clientName" value="" />
      <!-- The path where log messages should be written to during installation -->
      <variable name="logFilePath" value="C:\Source\Temp\Fabric.Identity\Fabric.Identity.API\scripts\tests\DosInstall.log" />
      <!-- The minimum logging level that should be written during installation -->
      <variable name="minimumLoggingLevel" value="Verbose" />
    </scope>
    <scope name="identity">
      <!-- The path to the location of the zip file that contains the binaries for Fabric.Identity -->
      <variable name="zipPackage" value="Fabric.Identity.API.zip" />
      <!-- The name of the app and app pool that will be created in IIS -->
      <variable name="appName" value="identity" />
      <!-- The endpoint for the application that will be created -->
      <variable name="applicationEndPoint" value="" />
      <!-- The thumb-print of an SSL certificate to use for signing access and identity tokens. 
           For initial installation it is recommended to use the thumb-print of the certificate 
           providing TLS/SSL for the website. -->
      <variable name="iisUser" value="" />
      <variable name="primarySigningCertificateThumbprint" value="" />
      <!-- The thumb-print of an SSL certificate to use for encrypting/decrypting sensitive information 
           in the config. For initial installation it is recommended to use the thumb-print of the 
           certificate providing TLS/SSL for the website.-->
      <variable name="encryptionCertificateThumbprint" value="" />
      <!-- An Azure Application Insights instrumentation key that allows telemetry to be recorded in 
           Azure Application Insights. If no instrumentation key is provided, no telemetry will be sent. -->
      <variable name="appInsightsInstrumentationKey" value="" />
      <!-- The name of the IIS website to install the application under -->
      <variable name="siteName" value="Default Web Site" />
      <!-- The name of the Identity database on the sql server instance -->
      <variable name="identityDbName" value="Identity" />
      <!-- The Sql Server role that the app pool user will be added to -->
      <variable name="identityDatabaseRole" value="IdentityServiceRole" />
      <!-- Enables Azure AD integration -->
      <variable name="useAzureAD" value="False" />
      <!-- Enables Windows AD integration -->
      <variable name="useWindowsAD" value="True" />
      <!-- Tenants identity is to be registered with -->
      <tenants>
       <variable name="274E8B06-8061-401C-A2C1-DF9030D10887" alias="Tenant1" />
       <variable name="A8A4DCA5-B9CA-4F0D-8B96-E2276345BBB9" alias="Tenant2" />
      </tenants>
      <!-- Reply Url for Azure App registration -->
      <replyUrls>
        <variable name="https://testvm.hqcatalyst.local/identity" alias="" />
        <variable name="https://testvm.hqcatalyst.local/identity/signin-oidc" alias="" />
      </replyUrls>
      <!-- The Tenant identity is to be registered with -->
      <claimsIssuerTenant>
        <variable name="274E8B06-8061-401C-A2C1-DF9030D10887" alias="Tenant1" />
      </claimsIssuerTenant>
      <!-- The Tenants that are allowed through to the claims issuer  -->
      <allowedTenants>
        <variable name="A8A4DCA5-B9CA-4F0D-8B96-E2276345BBB9" alias="Tenant2" />
      </allowedTenants>
      <!-- The name of the secret to be created for the azure application registration -->
      <variable name="azureSecretName" value="testSecret" />
      <registeredApplications>
        <variable appName="Identity Provider Search Service" tenantId="274E8B06-8061-401C-A2C1-DF9030D10887" tenantAlias="Tenant1" clientid="C84D0B75-A328-4568-A3D4-8989F28DFC11" secret="secret1=" />
        <variable appName="Identity Provider Search Service" tenantId="A8A4DCA5-B9CA-4F0D-8B96-E2276345BBB9" tenantAlias="Tenant2" clientid="889BBD60-97BE-4F10-9F0D-37F34EE025C6" secret="secret2=" />
        <variable appName="Identity Service" tenantId="274E8B06-8061-401C-A2C1-DF9030D10887" tenantAlias="Tenant1" clientid="180E6A6C-1A03-4C79-AEDF-7F7D87A2CED2" secret="secret3=" />
      </registeredApplications>
	  <error v="< 2"/>
    </scope>
    <scope name="identityProviderSearchService">
      <!-- The name of the app that will be created in IIS -->
      <variable name="appName" value="IdentityProviderSearchService" />
      <!-- The name of the app pool that will be created in IIS -->
      <variable name="appPoolName" value="IdentityProviderSearchService" />
      <!-- The endpoint for the application that will be created -->
      <variable name="applicationEndPoint" value="" />
      <!-- The name of the IIS website to install the application under -->
      <variable name="siteName" value="Default Web Site" />
      <!-- The name of the iis user that will be used for the application pool -->
      <variable name="iisUser" value="" />
    </scope>
    <scope name="discoveryservice">
      <!-- The name of the app that will be created in IIS -->
      <variable name="appName" value="DiscoveryService" />
      <!-- The name of the app pool that will be created in IIS -->
      <variable name="appPoolName" value="DiscoveryService" />
      <!-- The name of the IIS website to install the application under -->
      <variable name="siteName" value="Default Web Site" />
      <variable name="iisUser" value="" />
      <!-- If you want discovery service to use OAuth, this will also install identity first. -->
      <variable name="enableOAuth" value="false" />
    </scope>
  </settings>
</installation>